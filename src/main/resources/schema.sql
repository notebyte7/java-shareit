drop table if exists USERS;

drop table if exists REQUESTS;

drop table if exists ITEMS;

drop table if exists BOOKING;

drop table if exists COMMENTS;


create table if not exists USERS
(
    ID    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    NAME  VARCHAR(255)                            not null,
    EMAIL VARCHAR(512)                            not null,
    constraint USERS_pk
        primary key (ID),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

create table if not exists REQUESTS
(
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    DESCRIPTION  VARCHAR                                 not null,
    REQUESTOR_ID BIGINT                                  not null,
    constraint REQUESTS_PK
        primary key (ID),
    constraint REQUESTS_REQUESTOR_ID_FK
        foreign key (REQUESTOR_ID) references USERS (ID)
);

create table if not exists ITEMS
(
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    NAME         VARCHAR(255)                            not null,
    DESCRIPTION  VARCHAR                                 not null,
    IS_AVAILABLE BOOLEAN                                 not null,
    OWNER_ID     BIGINT                                  not null,
    REQUEST_ID   BIGINT                                  not null,
    constraint ID_pk
        primary key (ID),
    constraint ITEMS_OWNER_ID_FK
        foreign key (OWNER_ID) references USERS (ID),
    constraint ITEMS_REQUEST_ID_FK
        foreign key (REQUEST_ID) references REQUESTS (ID)
);

create type if not exists status_enum as enum ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED');

create table if not exists BOOKING
(
    ID         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    START_DATE TIMESTAMP WITHOUT TIME ZONE             not null,
    END_DATE   TIMESTAMP WITHOUT TIME ZONE,
    ITEM_ID    BIGINT                                  not null,
    BOOKER_ID  BIGINT                                  not null,
    STATUS     status_enum,
    constraint "BOOKING_pk"
        primary key (ID),
    constraint FILMS_ITEM_ID_FK
        foreign key (ITEM_ID) references ITEMS (ID),
    constraint FILMS_BOOKER_ID_FK
        foreign key (BOOKER_ID) references USERS (ID)
);

create table if not exists COMMENTS
(
    ID        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    TEXT      VARCHAR                                 not null,
    ITEM_ID   BIGINT                                  not null,
    AUTHOR_ID BIGINT                                  not null,
    constraint COMMENTS_PK
        primary key (ID),
    constraint "COMMENTS_ITEM_ID_fk"
        foreign key (ITEM_ID) references ITEMS (ID),
    constraint "COMMENTS_AUTHOR_ID_fk"
        foreign key (AUTHOR_ID) references USERS
);

